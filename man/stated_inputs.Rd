% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GUI-MODULE-stated_inputs.R
\name{stated_textUI}
\alias{stated_textUI}
\alias{stated_text}
\alias{stated_selectUI}
\alias{stated_select}
\alias{stated_buttonUI}
\alias{stated_button}
\title{Module: stated input controls}
\usage{
stated_textUI(id, ...)

stated_text(input, output, session, state, value)

stated_selectUI(id, ...)

stated_select(input, output, session, state, value)

stated_buttonUI(id, ...)

stated_button(input, output, session, state)
}
\arguments{
\item{id}{Namespace id parameter (must be unique)}

\item{...}{Additional parameters passed to
\code{\link[shiny]{textInput}} or \code{\link[shiny]{selectInput}}}

\item{input, output, session}{Shiny server parameters}

\item{state}{\code{\link[shiny]{reactive}} value to determine the state}

\item{value}{\code{\link[shiny]{reactive}} value to determine the value}
}
\value{
The value of the input
}
\description{
Create an input control that is enabled and disabled automatically
based on the state parameter.
}
\examples{
ui <- stated_textUI("myID", label="My text input")
server <- function(input, output, session) {
  callModule(stated_text, "myID", state=reactive(expr))
}
}
