% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GUI-MODULE-fileChooser.R
\name{fileChooser}
\alias{fileChooser}
\alias{fileChooserUI}
\title{Module: File Chooser}
\usage{
fileChooser(input, output, session, state, filetypes = NULL,
  updateFreq = 2000)

fileChooserUI(id, label, title, multiple, ..., buttonType = "default",
  class = NULL)
}
\arguments{
\item{input, output, session}{Shiny server parameters}

\item{state}{\code{\link[shiny]{reactive}} value to determine the state}

\item{filetypes}{A character vector of file extensions (without dot in front 
i.e. 'txt' not '.txt') to include in the output. Use the empty string to 
include files with no extension. If not set all file types will be included}

\item{id}{The id matching the \code{\link{shinyFileChoose}}}

\item{label}{The text that should appear on the button}

\item{title}{The heading of the dialog box that appears when the button is 
pressed}

\item{multiple}{A logical indicating whether or not it should be possible to 
select multiple files}

\item{buttonType}{The Bootstrap button markup used to colour the button. 
Defaults to 'default' for a neutral appearance but can be changed for another
look. The value will be pasted with 'btn-' and added as class.}

\item{class}{Additional classes added to the button}
}
\value{
The value of the input
}
\description{
Calls either \code{\link{JS_fileChooser}} or \code{\link[rstudioapi]{selectFile}}
depending on whether it is used in an Rstudio instance
}
\examples{
ui <- fileChooserUI('myID', label='File select', title='Please select a file', multiple=FALSE)
server <- function(input, output, session) {
    callModule(fileChooser, "myID")
}
}
